{
  "name": "resourcecache",
  "version": "0.1.2",
  "description": "Caches resources from a string or URL in local files.",
  "author": {
    "name": "Ruben Verborgh",
    "email": "ruben.verborgh@gmail.com"
  },
  "keywords": [
    "cache",
    "resource"
  ],
  "main": "./lib/resourcecache.js",
  "engines": {
    "node": ">=0.6.0"
  },
  "dependencies": {},
  "devDependencies": {
    "vows": "~0.6.0",
    "should": "~0.3.2",
    "express": "~2.5.2"
  },
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/RubenVerborgh/ResourceCache.git"
  },
  "bugs": {
    "url": "http://github.com/RubenVerborgh/ResourceCache/issues"
  },
  "readme": "# ResourceCache\nNode.js library that caches resources from a string or URL in local files.\n\n## Installation\n\n``` bash\n$ npm install resourcecache\n```\n\n## Usage\nFirst, load the `ResourceCache` class from the `resourcecache` module and create an instance.\n\n``` js\nResourceCache = require('resourcecache');\ncache = new ResourceCache();\n```\n\nThen, you can cache a piece of text in a file like this:\n\n``` js\ncache.cacheFromString('text', function (error, fileName) {\n  console.log('The text has been cached inside', fileName);\n  console.log('This file contains:', require('fs').readFileSync(fileName, 'utf-8'));\n});\n```\n\nOr you can cache an online resource:\n\n``` js\ncache.cacheFromUrl('http://perdu.com/', function (error, fileName) {\n  console.log('The resource has been cached inside', fileName);\n  console.log('This file contains:', require('fs').readFileSync(fileName, 'utf-8'));\n});\n```\n    \nRelease the file when you don't need it anymore:\n\n``` js\ncache.release(fileName);\n```\n\nWhen the process exits, all remaining files will be released.\n\n## Status\nThis library is in alpha stage and doesn't do much caching yet.  \nHowever, the described interface has been implemented and is fully functional.\n\nAn example use can be seen in the [EyeServer](https://github.com/RubenVerborgh/EyeServer/blob/master/lib/eye.js) project.\n",
  "readmeFilename": "README.md",
  "_id": "resourcecache@0.1.2",
  "dist": {
    "shasum": "8149d6fc800c72f99cfe108c72dbc2d976718ac5"
  },
  "_from": "resourcecache@~0.1.0",
  "_resolved": "https://registry.npmjs.org/resourcecache/-/resourcecache-0.1.2.tgz"
}
